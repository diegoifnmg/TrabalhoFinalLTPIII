/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifnmg.tads.sgli.Presentation;

import br.edu.ifnmg.tads.sgli.DataAccess.CaixaDAO;
import br.edu.ifnmg.tads.sgli.DataAccess.SessaoDAO;
import br.edu.ifnmg.tads.sgli.DataAccess.UsuarioDAO;
import br.edu.ifnmg.tads.sgli.DomainModel.Caixa;
import br.edu.ifnmg.tads.sgli.DomainModel.Funcionario;
import br.edu.ifnmg.tads.sgli.DomainModel.Sessao;
import br.edu.ifnmg.tads.sgli.DomainModel.Usuario;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Diego
 */
public class frmPrincipal extends javax.swing.JFrame {

    UsuarioDAO usuarioDAO = new UsuarioDAO();
    Usuario usuario;
    CaixaDAO caixaDAO = new CaixaDAO();
    Caixa caixa = new Caixa();
    Funcionario funcionario;
    Sessao sessao;
    SessaoDAO sessaoDAO;
    
    
    /**
     * Creates new form frmPrincipal
     */
    public frmPrincipal(Funcionario funcionario) {
        initComponents();
        this.funcionario = funcionario;
        lblNomeUsuario.setText(this.funcionario.getNome());
        carregaSessao(funcionario);
    }
    
    private void carregaSessao(Funcionario funcionario) {
        Date data = new Date();
        try {
            sessao = new Sessao();
            sessaoDAO = new SessaoDAO();
            caixa = caixaDAO.AbrirCaixa(1);

            sessao.setDataInicio(data);
            sessao.setUsuario(usuarioDAO.AbrirUsuario(funcionario.getCodigo()));
            sessao.setCaixa(caixa);
            sessao.setSaldoAbertura(caixa.getSaldo());

            sessaoDAO.Salvar(sessao);
        } catch (Exception ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNomeUsuario = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuControle = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuiTrocarFuncionario = new javax.swing.JMenuItem();
        Ferramentas = new javax.swing.JMenuItem();
        mnuiLogoff = new javax.swing.JMenuItem();
        mnuiFechar = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        imnuCadastroClientes = new javax.swing.JMenuItem();
        imnuCadastroFuncionarios = new javax.swing.JMenuItem();
        imnuCadastroFornecedores = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        imnuCadastroCargos = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        imnuCadastoProdutos = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        imnuVenda = new javax.swing.JMenuItem();
        imnuClienteRelatorio = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        mnuiFuncionarioRelatorio = new javax.swing.JMenuItem();
        mnuiFornecedores = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SGLI - Sistema Loja de Informática");

        lblNomeUsuario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblUsuario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblUsuario.setText("Usuario:");

        mnuControle.setText("Controle");

        jMenuItem3.setText("Caixa");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        mnuControle.add(jMenuItem3);
        mnuControle.add(jSeparator1);

        mnuiTrocarFuncionario.setText("Trocar de Funcionário");
        mnuiTrocarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiTrocarFuncionarioActionPerformed(evt);
            }
        });
        mnuControle.add(mnuiTrocarFuncionario);

        Ferramentas.setText("Ferramentas");
        mnuControle.add(Ferramentas);

        mnuiLogoff.setText("Logoff");
        mnuiLogoff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiLogoffActionPerformed(evt);
            }
        });
        mnuControle.add(mnuiLogoff);

        mnuiFechar.setText("Fechar");
        mnuiFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiFecharActionPerformed(evt);
            }
        });
        mnuControle.add(mnuiFechar);

        jMenuBar1.add(mnuControle);

        jMenu3.setText("Cadastro");

        imnuCadastroClientes.setText("Cadastro de Clientes");
        imnuCadastroClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imnuCadastroClientesActionPerformed(evt);
            }
        });
        jMenu3.add(imnuCadastroClientes);

        imnuCadastroFuncionarios.setText("Cadastro de Funcionários");
        imnuCadastroFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imnuCadastroFuncionariosActionPerformed(evt);
            }
        });
        jMenu3.add(imnuCadastroFuncionarios);

        imnuCadastroFornecedores.setText("Cadastro de Fornecedores");
        imnuCadastroFornecedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imnuCadastroFornecedoresActionPerformed(evt);
            }
        });
        jMenu3.add(imnuCadastroFornecedores);
        jMenu3.add(jSeparator2);

        imnuCadastroCargos.setText("Cadastro de Cargos");
        imnuCadastroCargos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imnuCadastroCargosActionPerformed(evt);
            }
        });
        jMenu3.add(imnuCadastroCargos);

        jMenuBar1.add(jMenu3);

        jMenu1.setText("Produtos");

        imnuCadastoProdutos.setText("Cadastrar Produtos");
        imnuCadastoProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imnuCadastoProdutosActionPerformed(evt);
            }
        });
        jMenu1.add(imnuCadastoProdutos);

        jMenuItem1.setText("Cadastrar Marcas");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Vendas");

        imnuVenda.setText("Venda");
        imnuVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imnuVendaActionPerformed(evt);
            }
        });
        jMenu2.add(imnuVenda);

        jMenuBar1.add(jMenu2);

        imnuClienteRelatorio.setText("Relatórios");

        jMenuItem2.setText("Clientes");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        imnuClienteRelatorio.add(jMenuItem2);

        mnuiFuncionarioRelatorio.setText("Funcionários");
        mnuiFuncionarioRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiFuncionarioRelatorioActionPerformed(evt);
            }
        });
        imnuClienteRelatorio.add(mnuiFuncionarioRelatorio);

        mnuiFornecedores.setText("Fornecedores");
        mnuiFornecedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiFornecedoresActionPerformed(evt);
            }
        });
        imnuClienteRelatorio.add(mnuiFornecedores);

        jMenuBar1.add(imnuClienteRelatorio);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(680, Short.MAX_VALUE)
                .addComponent(lblUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsuario))
                .addContainerGap(525, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void imnuCadastroClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imnuCadastroClientesActionPerformed
        frmClienteListagem janela = new frmClienteListagem();
        add(janela);
        janela.setVisible(true);
    }//GEN-LAST:event_imnuCadastroClientesActionPerformed

    private void imnuCadastroFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imnuCadastroFuncionariosActionPerformed
        frmFuncionarioListagem janela = new frmFuncionarioListagem();
        add(janela);
        janela.setVisible(true);
    }//GEN-LAST:event_imnuCadastroFuncionariosActionPerformed

    private void imnuCadastroFornecedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imnuCadastroFornecedoresActionPerformed
        frmFornecedorListagem janela = new frmFornecedorListagem();
        add(janela);
        janela.setVisible(true);
    }//GEN-LAST:event_imnuCadastroFornecedoresActionPerformed

    private void imnuCadastroCargosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imnuCadastroCargosActionPerformed
        frmCargoListagem janela = new frmCargoListagem();
        add(janela);
        janela.setVisible(true);
    }//GEN-LAST:event_imnuCadastroCargosActionPerformed

    private void imnuCadastoProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imnuCadastoProdutosActionPerformed
        frmProdutoListagem janela = new frmProdutoListagem();
        add(janela);
        janela.setVisible(true);
    }//GEN-LAST:event_imnuCadastoProdutosActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        frmMarcaListagem janela = new frmMarcaListagem();
        add(janela);
        janela.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void imnuVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imnuVendaActionPerformed
        frmVenda janela = new frmVenda(funcionario,sessao);
        add(janela);
        janela.setVisible(true);
    }//GEN-LAST:event_imnuVendaActionPerformed

    private void mnuiLogoffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiLogoffActionPerformed
        logoff();
    }//GEN-LAST:event_mnuiLogoffActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        Connection conn = null;
        try {
            // Obtém o diretório da aplicação
            String arquivo = System.getProperty("user.dir");

            // Carrega conexão via JDBC
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost/sg", "root", "");
            Statement sql = conn.createStatement();

            // Carrega fonte de dados
            ResultSet rs = sql.executeQuery("select * from cliente c join pessoa p on c.idPessoa = p.idPessoa where ativo = 1");
            JRDataSource ds = new JRResultSetDataSource(rs);

            // Preenche o relatório com os dados
            JasperPrint print = JasperFillManager.fillReport(arquivo + "/src/br/edu/ifnmg/tads/sgli/Relatorio/relatorioClientes.jasper", null, ds);

            // Exibe visualização dos dados
            JasperViewer.viewReport(print, false);

        } catch (JRException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void mnuiTrocarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiTrocarFuncionarioActionPerformed
        frmLogin janela = new frmLogin();
        janela.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_mnuiTrocarFuncionarioActionPerformed

    private void mnuiFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiFecharActionPerformed
        System.exit(1);
    }//GEN-LAST:event_mnuiFecharActionPerformed

    private void mnuiFuncionarioRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiFuncionarioRelatorioActionPerformed
        Connection conn = null;
        try {
            // Obtém o diretório da aplicação
            String arquivo = System.getProperty("user.dir");

            // Carrega conexão via JDBC
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost/sg", "root", "");
            Statement sql = conn.createStatement();

            // Carrega fonte de dados
            ResultSet rs = sql.executeQuery("select * from funcionario f join pessoa p on f.idPessoa = p.idPessoa where ativo = 1");
            JRDataSource ds = new JRResultSetDataSource(rs);

            // Preenche o relatório com os dados
            JasperPrint print = JasperFillManager.fillReport(arquivo + "/src/br/edu/ifnmg/tads/sgli/Relatorio/relatorioFuncionario.jasper", null, ds);

            // Exibe visualização dos dados
            JasperViewer.viewReport(print, false);

        } catch (JRException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_mnuiFuncionarioRelatorioActionPerformed

    private void mnuiFornecedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiFornecedoresActionPerformed
        Connection conn = null;
        try {
            // Obtém o diretório da aplicação
            String arquivo = System.getProperty("user.dir");

            // Carrega conexão via JDBC
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost/sg", "root", "");
            Statement sql = conn.createStatement();

            // Carrega fonte de dados
            ResultSet rs = sql.executeQuery("select * from fornecedor f join pessoa p on f.IdPessoa = p.IdPessoa where ativo = 1");
            JRDataSource ds = new JRResultSetDataSource(rs);

            // Preenche o relatório com os dados
            JasperPrint print = JasperFillManager.fillReport(arquivo + "/src/br/edu/ifnmg/tads/sgli/Relatorio/relatorioFornecedores.jasper", null, ds);

            // Exibe visualização dos dados
            JasperViewer.viewReport(print, false);

        } catch (JRException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_mnuiFornecedoresActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        frmCaixa janela = new frmCaixa();
        add(janela);
        janela.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPrincipal(null).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Ferramentas;
    private javax.swing.JMenuItem imnuCadastoProdutos;
    private javax.swing.JMenuItem imnuCadastroCargos;
    private javax.swing.JMenuItem imnuCadastroClientes;
    private javax.swing.JMenuItem imnuCadastroFornecedores;
    private javax.swing.JMenuItem imnuCadastroFuncionarios;
    private javax.swing.JMenu imnuClienteRelatorio;
    private javax.swing.JMenuItem imnuVenda;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JLabel lblNomeUsuario;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JMenu mnuControle;
    private javax.swing.JMenuItem mnuiFechar;
    private javax.swing.JMenuItem mnuiFornecedores;
    private javax.swing.JMenuItem mnuiFuncionarioRelatorio;
    private javax.swing.JMenuItem mnuiLogoff;
    private javax.swing.JMenuItem mnuiTrocarFuncionario;
    // End of variables declaration//GEN-END:variables

   protected void logoff() {
        Date data = new Date();
        try {
            caixa = caixaDAO.AbrirCaixa(1);
            sessao.setDataTermino(data);
            sessao.setSaldoFechamento(caixa.getSaldo());
            sessaoDAO.Salvar(sessao);


            frmLogin janela = new frmLogin();

            janela.setVisible(true);
            setVisible(false);
            dispose();
        } catch (Exception ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}





